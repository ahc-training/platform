- name: Install portainer namespace
  kubernetes.core.k8s:
    state: present
    namespace: default
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: devops

- name: Install portainer service account
  kubernetes.core.k8s:
    state: present
    namespace: devops
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: portainer-sa-clusteradmin
        namespace: devops
        labels:
          app.kubernetes.io/name: portainer
          app.kubernetes.io/instance: portainer
          app.kubernetes.io/version: "ce-latest"

- name: Install portainer persistent volume claim
  kubernetes.core.k8s:
    state: present
    namespace: devops
    definition:
      kind: "PersistentVolumeClaim"
      apiVersion: "v1"
      metadata:
        name: portainer-volume-claim
        namespace: devops  
        annotations:
          volume.alpha.kubernetes.io/storage-class: "generic"
        labels:
          io.portainer.kubernetes.application.stack: portainer
          app.kubernetes.io/name: portainer
          app.kubernetes.io/instance: portainer
          app.kubernetes.io/version: "ce-latest"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "2Gi"
        storageClassName: "cstor-csi-disk"

- name: Install portainer cluster role binding
  kubernetes.core.k8s:
    state: present
    namespace: devops
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: portainer
        labels:
          app.kubernetes.io/name: portainer
          app.kubernetes.io/instance: portainer
          app.kubernetes.io/version: "ce-latest"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        namespace: devops
        name: portainer-sa-clusteradmin

- name: Install portainer service
  kubernetes.core.k8s:
    state: present
    namespace: devops
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: portainer
        namespace: devops
        labels:
          io.portainer.kubernetes.application.stack: portainer
          app.kubernetes.io/name: portainer
          app.kubernetes.io/instance: portainer
          app.kubernetes.io/version: "ce-latest"
          lb.kubesphere.io/v1alpha1: openelb
          protocol.openelb.kubesphere.io/v1alpha1: layer2
          eip.openelb.kubesphere.io/v1alpha2: eip-k8s-pool
      spec:
        type: LoadBalancer
        ports:
          - port: 9000
            targetPort: 9000
            protocol: TCP
            name: http  
          - port: 9443
            targetPort: 9443
            protocol: TCP
            name: https
          - port: 8000
            targetPort: 8000
            protocol: TCP
            name: edge
        selector:
          app.kubernetes.io/name: portainer
          app.kubernetes.io/instance: portainer
        externalTrafficPolicy: Cluster

- name: Install portainer deployment
  kubernetes.core.k8s:
    state: present
    namespace: devops
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: portainer
        namespace: devops
        labels:
          io.portainer.kubernetes.application.stack: portainer
          app.kubernetes.io/name: portainer
          app.kubernetes.io/instance: portainer
          app.kubernetes.io/version: "ce-latest"
      spec:
        replicas: 1
        strategy:
          type: "Recreate"
        selector:
          matchLabels:
            app.kubernetes.io/name: portainer
            app.kubernetes.io/instance: portainer
        template:
          metadata:
            labels:
              app.kubernetes.io/name: portainer
              app.kubernetes.io/instance: portainer
          spec:
            nodeSelector:
              {}
            serviceAccountName: portainer-sa-clusteradmin
            volumes:
              - name: "data"
                persistentVolumeClaim:
                  claimName: portainer-volume-claim
            containers:
              - name: portainer
                image: "portainer/portainer-ce:latest"
                imagePullPolicy: Always
                args:          
                volumeMounts:
                  - name: data
                    mountPath: /data              
                ports:
                  - name: http
                    containerPort: 9000
                    protocol: TCP
                  - name: https
                    containerPort: 9443
                    protocol: TCP                
                  - name: tcp-edge
                    containerPort: 8000
                    protocol: TCP              
                livenessProbe:
                  httpGet:
                    path: /
                    port: 9443
                    scheme: HTTPS
                readinessProbe:
                  httpGet:
                    path: /
                    port: 9443
                    scheme: HTTPS        
                resources:
                  {}
